import{_ as s,a,o as i,ah as d}from"./chunks/framework.Dpa9-zjT.js";const E=JSON.parse('{"title":"Keyboard 虚拟键盘","description":"","frontmatter":{},"headers":[],"relativePath":"src/components/form/keyboard.md","filePath":"src/components/form/keyboard.md","lastUpdated":1752837580000}'),h={name:"src/components/form/keyboard.md"};function e(n,t,l,r,p,k){return i(),a("div",null,t[0]||(t[0]=[d(`<h1 id="keyboard-虚拟键盘" tabindex="-1">Keyboard 虚拟键盘 <a class="header-anchor" href="#keyboard-虚拟键盘" aria-label="Permalink to &quot;Keyboard 虚拟键盘&quot;">​</a></h1><p>虚拟键盘组件提供安全的输入体验，支持多种键盘类型。默认需要点击确定按钮才会更新绑定值，启用 <code>inputImmediate</code> 参数后可实现实时输入绑定。</p><h2 id="数字键盘" tabindex="-1">数字键盘 <a class="header-anchor" href="#数字键盘" aria-label="Permalink to &quot;数字键盘&quot;">​</a></h2><p>数字键盘组件 <code>cl-keyboard-number</code>，支持纯数字、小数和身份证号码等多种输入类型。</p><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>pt</td><td>样式穿透配置</td><td><a href="#passthrough">PassThrough</a></td><td>—</td><td>—</td></tr><tr><td>modelValue</td><td>当前输入的值</td><td>string</td><td>—</td><td>—</td></tr><tr><td>type</td><td>键盘输入类型</td><td>string</td><td>&quot;number&quot; | &quot;digit&quot; | &quot;idcard&quot;</td><td>&quot;number&quot;</td></tr><tr><td>title</td><td>弹窗标题</td><td>string</td><td>—</td><td>&quot;数字键盘&quot;</td></tr><tr><td>placeholder</td><td>输入框占位文本</td><td>string</td><td>—</td><td>&quot;安全键盘，请放心输入&quot;</td></tr><tr><td>confirmText</td><td>确认按钮文本</td><td>string</td><td>—</td><td>&quot;确定&quot;</td></tr><tr><td>maxlength</td><td>最大输入长度限制</td><td>number</td><td>—</td><td>8</td></tr><tr><td>showValue</td><td>是否显示当前输入值</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>inputImmediate</td><td>是否启用实时绑定</td><td>boolean</td><td>—</td><td>false</td></tr></tbody></table><h3 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h3><table tabindex="0"><thead><tr><th>事件名称</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>绑定值改变时触发</td><td>value: string</td></tr></tbody></table><h3 id="passthrough" tabindex="-1">PassThrough <a class="header-anchor" href="#passthrough" aria-label="Permalink to &quot;PassThrough&quot;">​</a></h3><p>样式穿透配置允许您自定义组件内部各个元素的样式，实现更灵活的外观定制。</p><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>className</td><td>组件根容器样式类</td><td>string</td></tr><tr><td>item</td><td>键盘按键样式配置</td><td><a href="/src/components/pt.html#passthroughprops">PassThroughProps</a></td></tr><tr><td>value</td><td>输入值显示区域样式</td><td><a href="/src/components/pt.html#passthroughprops">PassThroughProps</a></td></tr><tr><td>popup</td><td>弹窗容器参数配置</td><td><a href="/src/components/pt.html#passthroughprops">ClPopupProps</a></td></tr></tbody></table><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h3><h4 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h4><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cl-keyboard-number</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;keyboardNumberRef&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cl-keyboard-number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> keyboardNumberRef</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ClKeyboardNumberComponentPublicInstance</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  );</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> openKeyboardNumber</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    keyboardNumberRef.value?.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="密码键盘" tabindex="-1">密码键盘 <a class="header-anchor" href="#密码键盘" aria-label="Permalink to &quot;密码键盘&quot;">​</a></h2><p>密码键盘组件 <code>cl-keyboard-password</code>，专为密码输入场景设计，提供安全的密码输入体验。</p><h3 id="参数-1" tabindex="-1">参数 <a class="header-anchor" href="#参数-1" aria-label="Permalink to &quot;参数&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>pt</td><td>样式穿透配置</td><td><a href="#passthrough">PassThrough</a></td><td>—</td><td>—</td></tr><tr><td>modelValue</td><td>当前输入的值</td><td>string</td><td>—</td><td>—</td></tr><tr><td>type</td><td>键盘输入类型</td><td>string</td><td>&quot;number&quot; | &quot;digit&quot; | &quot;idcard&quot;</td><td>&quot;number&quot;</td></tr><tr><td>title</td><td>弹窗标题</td><td>string</td><td>—</td><td>&quot;密码键盘&quot;</td></tr><tr><td>placeholder</td><td>输入框占位文本</td><td>string</td><td>—</td><td>&quot;安全键盘，请放心输入&quot;</td></tr><tr><td>confirmText</td><td>确认按钮文本</td><td>string</td><td>—</td><td>&quot;确定&quot;</td></tr><tr><td>maxlength</td><td>最大输入长度限制</td><td>number</td><td>—</td><td>8</td></tr><tr><td>showValue</td><td>是否显示当前输入值</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>inputImmediate</td><td>是否启用实时绑定</td><td>boolean</td><td>—</td><td>false</td></tr></tbody></table><h3 id="事件-1" tabindex="-1">事件 <a class="header-anchor" href="#事件-1" aria-label="Permalink to &quot;事件&quot;">​</a></h3><table tabindex="0"><thead><tr><th>事件名称</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>绑定值改变时触发</td><td>value: string</td></tr></tbody></table><h3 id="passthrough-1" tabindex="-1">PassThrough <a class="header-anchor" href="#passthrough-1" aria-label="Permalink to &quot;PassThrough&quot;">​</a></h3><p>样式穿透配置允许您自定义组件内部各个元素的样式，实现更灵活的外观定制。</p><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>className</td><td>组件根容器样式类</td><td>string</td></tr><tr><td>item</td><td>键盘按键样式配置</td><td><a href="/src/components/pt.html#passthroughprops">PassThroughProps</a></td></tr><tr><td>value</td><td>输入值显示区域样式</td><td><a href="/src/components/pt.html#passthroughprops">PassThroughProps</a></td></tr><tr><td>popup</td><td>弹窗容器参数配置</td><td><a href="/src/components/pt.html#passthroughprops">ClPopupProps</a></td></tr></tbody></table><h3 id="示例-1" tabindex="-1">示例 <a class="header-anchor" href="#示例-1" aria-label="Permalink to &quot;示例&quot;">​</a></h3><h4 id="基础用法-1" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法-1" aria-label="Permalink to &quot;基础用法&quot;">​</a></h4><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cl-keyboard-password</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;keyboardPasswordRef&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cl-keyboard-password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> keyboardPasswordRef</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ClKeyboardPasswordComponentPublicInstance</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> openKeyboardPassword</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    keyboardPasswordRef.value?.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="车牌键盘" tabindex="-1">车牌键盘 <a class="header-anchor" href="#车牌键盘" aria-label="Permalink to &quot;车牌键盘&quot;">​</a></h2><p>车牌键盘组件 <code>cl-keyboard-car</code>，专为车牌号码输入场景设计，支持中文省份简称和字母数字组合。</p><h3 id="参数-2" tabindex="-1">参数 <a class="header-anchor" href="#参数-2" aria-label="Permalink to &quot;参数&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>pt</td><td>样式穿透配置</td><td><a href="#passthrough">PassThrough</a></td><td>—</td><td>—</td></tr><tr><td>modelValue</td><td>当前输入的值</td><td>string</td><td>—</td><td>—</td></tr><tr><td>title</td><td>弹窗标题</td><td>string</td><td>—</td><td>&quot;车牌键盘&quot;</td></tr><tr><td>placeholder</td><td>输入框占位文本</td><td>string</td><td>—</td><td>&quot;安全键盘，请放心输入&quot;</td></tr><tr><td>maxlength</td><td>最大输入长度限制</td><td>number</td><td>—</td><td>8</td></tr><tr><td>showValue</td><td>是否显示当前输入值</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>inputImmediate</td><td>是否启用实时绑定</td><td>boolean</td><td>—</td><td>false</td></tr></tbody></table><h3 id="事件-2" tabindex="-1">事件 <a class="header-anchor" href="#事件-2" aria-label="Permalink to &quot;事件&quot;">​</a></h3><table tabindex="0"><thead><tr><th>事件名称</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>绑定值改变时触发</td><td>value: string</td></tr></tbody></table><h3 id="passthrough-2" tabindex="-1">PassThrough <a class="header-anchor" href="#passthrough-2" aria-label="Permalink to &quot;PassThrough&quot;">​</a></h3><p>样式穿透配置允许您自定义组件内部各个元素的样式，实现更灵活的外观定制。</p><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>className</td><td>组件根元素样式</td><td>string</td></tr><tr><td>item</td><td>键盘按键配置</td><td><a href="/src/components/pt.html#passthroughprops">PassThroughProps</a></td></tr><tr><td>value</td><td>输入值显示区域配置</td><td><a href="/src/components/pt.html#passthroughprops">PassThroughProps</a></td></tr><tr><td>popup</td><td>弹窗容器配置</td><td><a href="/src/components/pt.html#passthroughprops">ClPopupProps</a></td></tr></tbody></table><h3 id="示例-2" tabindex="-1">示例 <a class="header-anchor" href="#示例-2" aria-label="Permalink to &quot;示例&quot;">​</a></h3><h4 id="基础用法-2" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法-2" aria-label="Permalink to &quot;基础用法&quot;">​</a></h4><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cl-keyboard-car</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;keyboardCarRef&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> @change</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;handleCarNumberChange&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cl-keyboard-car</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> keyboardCarRef</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ClKeyboardCarComponentPublicInstance</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> openKeyboardCar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    keyboardCarRef.value?.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="使用建议" tabindex="-1">使用建议 <a class="header-anchor" href="#使用建议" aria-label="Permalink to &quot;使用建议&quot;">​</a></h2><h3 id="安全性考虑" tabindex="-1">安全性考虑 <a class="header-anchor" href="#安全性考虑" aria-label="Permalink to &quot;安全性考虑&quot;">​</a></h3><ul><li>在处理敏感信息（如密码、支付密码）时，建议关闭 <code>showValue</code> 属性</li><li>使用 <code>inputImmediate</code> 时请谨慎处理输入值的实时验证</li></ul>`,41)]))}const g=s(h,[["render",e]]);export{E as __pageData,g as default};
