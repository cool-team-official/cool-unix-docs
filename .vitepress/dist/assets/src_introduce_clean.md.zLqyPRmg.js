import{_ as i,a,o as e,a2 as l}from"./chunks/framework.DONvsxB0.js";const r=JSON.parse('{"title":"纯净版本","description":"","frontmatter":{},"headers":[],"relativePath":"src/introduce/clean.md","filePath":"src/introduce/clean.md","lastUpdated":1754971630000}'),n={name:"src/introduce/clean.md"};function t(p,s,h,d,o,c){return e(),a("div",null,s[0]||(s[0]=[l(`<h1 id="纯净版本" tabindex="-1">纯净版本 <a class="header-anchor" href="#纯净版本" aria-label="Permalink to &quot;纯净版本&quot;">​</a></h1><p>纯净版本主要是为了让开发者在不依赖 <code>cool-admin</code> 的情况下也能使用 <code>cool-unix</code> 框架的功能，使其能够独立运行并发挥最大价值。</p><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><p>版本 <code>8.0.7</code> 以下的需要将依赖 <code>@cool-vue/vite-plugin</code> 更新至 <code>8.2.6</code> 以上</p><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pnpm </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> @cool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vue/vite</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin@</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8.2.6</span></span></code></pre></div><p>版本 <code>8.0.7</code> 后默认开启 <code>clean</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// vite.config.ts</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  cool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;uniapp-x&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    proxy,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    tailwind: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      enable: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    eps: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      dist: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.cool&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    clean: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//【重要】是否纯净版</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="优势" tabindex="-1">优势 <a class="header-anchor" href="#优势" aria-label="Permalink to &quot;优势&quot;">​</a></h2><ul><li>可以灵活对接企业内部其他技术栈的后端服务,如 <code>Java</code>、<code>PHP</code> 等</li><li>支持集成第三方请求库和插件,提供更多技术选择</li></ul><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">提示</p><p>如果不使用相关页面和组件,可以直接删除或忽略以下配置要求</p></div><ul><li>缺少了 <code>eps</code> 类型生成</li><li>缺少了 <code>service</code> 层的请求类型定义</li><li>需要自行实现页面请求逻辑,包括登录、用户信息修改等功能</li><li>需要调整 <code>/cool/service/index.ts</code> 中的 <code>Response</code> 返回值类型</li><li>需要修改 <code>/cool/store/user.ts</code> 中的用户信息类型定义,包括: <ul><li>token 处理</li><li>登录状态判断</li><li>用户详情</li><li>信息更新等</li></ul></li><li>字典(<code>dict</code>)功能不可用</li><li>需要调整 <code>/router/index.ts</code> 中的路由导航逻辑</li><li>需要重新实现 <code>/cool/upload/index.ts</code> 中的文件上传功能</li></ul>`,12)]))}const E=i(n,[["render",t]]);export{r as __pageData,E as default};
