import{_ as a,a as d,o as s,ah as i}from"./chunks/framework.Dpa9-zjT.js";const c=JSON.parse('{"title":"Textarea 文本域","description":"","frontmatter":{},"headers":[],"relativePath":"src/components/form/textarea.md","filePath":"src/components/form/textarea.md","lastUpdated":1752837580000}'),e={name:"src/components/form/textarea.md"};function r(h,t,l,n,o,p){return s(),d("div",null,t[0]||(t[0]=[i(`<h1 id="textarea-文本域" tabindex="-1">Textarea 文本域 <a class="header-anchor" href="#textarea-文本域" aria-label="Permalink to &quot;Textarea 文本域&quot;">​</a></h1><p><code>cl-textarea</code> 组件基于 uni-app 的 <code>textarea</code> 组件，提供了丰富的多行文本输入功能和样式定制能力。</p><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>pt</td><td>样式穿透配置</td><td><a href="#passthrough">PassThrough</a></td><td></td><td></td></tr><tr><td>modelValue</td><td>双向绑定的输入值</td><td>string</td><td></td><td>&quot;&quot;</td></tr><tr><td>inputmode</td><td>输入键盘类型</td><td>string</td><td>&quot;none&quot; | &quot;text&quot; | &quot;decimal&quot; | &quot;numeric&quot; | &quot;tel&quot; | &quot;search&quot; | &quot;email&quot; | &quot;url&quot;</td><td>&quot;text&quot;</td></tr><tr><td>autofocus</td><td>是否自动获取焦点</td><td>boolean</td><td></td><td>false</td></tr><tr><td>placeholder</td><td>输入框为空时显示的占位符文本</td><td>string</td><td></td><td>&quot;请输入&quot;</td></tr><tr><td>placeholderClass</td><td>占位符文本的自定义样式类名</td><td>string</td><td></td><td>&quot;&quot;</td></tr><tr><td>border</td><td>是否显示输入框边框</td><td>boolean</td><td></td><td>false</td></tr><tr><td>maxlength</td><td>最大输入字符数限制</td><td>number</td><td></td><td>140</td></tr><tr><td>disabled</td><td>是否禁用输入框</td><td>boolean</td><td></td><td>false</td></tr><tr><td>readonly</td><td>是否设置为只读状态</td><td>boolean</td><td></td><td>false</td></tr><tr><td>fixed</td><td>如果 textarea 是在 position:fixed 的区域，需要显示指定属性 fixed 为 true</td><td>boolean</td><td></td><td>false</td></tr><tr><td>height</td><td>文本域高度</td><td>number | string</td><td></td><td>120</td></tr><tr><td>autoHeight</td><td>是否自动调整高度</td><td>boolean</td><td></td><td>false</td></tr><tr><td>showWordLimit</td><td>是否显示字数统计</td><td>boolean</td><td></td><td>true</td></tr><tr><td>clearable</td><td>是否显示清空按钮</td><td>boolean</td><td></td><td>false</td></tr><tr><td>cursorColor</td><td>光标颜色</td><td>string</td><td></td><td></td></tr><tr><td>cursorSpacing</td><td>指定光标与键盘的距离（单位：px）</td><td>number</td><td></td><td>5</td></tr><tr><td>confirmHold</td><td>点击键盘确认按钮时是否保持键盘不收起</td><td>boolean</td><td></td><td>false</td></tr><tr><td>confirmType</td><td>设置键盘右下角按钮的文字</td><td>string</td><td>&quot;done&quot; | &quot;go&quot; | &quot;next&quot; | &quot;search&quot; | &quot;send&quot;</td><td>done</td></tr><tr><td>showConfirmBar</td><td>是否显示键盘上方带有&quot;完成&quot;按钮那一栏</td><td>boolean</td><td></td><td>true</td></tr><tr><td>holdKeyboard</td><td>焦点时，点击页面的时候不收起键盘</td><td>boolean</td><td></td><td>false</td></tr><tr><td>selectionStart</td><td>光标起始位置，自动聚集时有效，需与 selection-end 搭配使用</td><td>number</td><td></td><td>-1</td></tr><tr><td>selectionEnd</td><td>光标结束位置，自动聚集时有效，需与 selection-start 搭配使用</td><td>number</td><td></td><td>-1</td></tr><tr><td>adjustPosition</td><td>键盘弹起时，是否自动上推页面</td><td>boolean</td><td></td><td>true</td></tr><tr><td>adjustKeyboardTo</td><td>键盘对齐位置</td><td>string</td><td>&quot;cursor&quot; | &quot;bottom&quot;</td><td>&quot;cursor&quot;</td></tr></tbody></table><h2 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h2><table tabindex="0"><thead><tr><th>事件</th><th>说明</th></tr></thead><tbody><tr><td>input</td><td>输入内容时触发</td></tr><tr><td>change</td><td>输入内容发生变化时触发</td></tr><tr><td>focus</td><td>输入框获得焦点时触发</td></tr><tr><td>blur</td><td>输入框失去焦点时触发</td></tr><tr><td>confirm</td><td>点击键盘确认按钮时触发</td></tr><tr><td>clear</td><td>点击清空按钮时触发</td></tr><tr><td>linechange</td><td>输入框行数变化时触发</td></tr><tr><td>keyboardheightchange</td><td>键盘高度发生变化的时候触发</td></tr></tbody></table><h2 id="passthrough" tabindex="-1">PassThrough <a class="header-anchor" href="#passthrough" aria-label="Permalink to &quot;PassThrough&quot;">​</a></h2><p>样式穿透配置，用于自定义组件内部元素的样式。</p><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>className</td><td>组件根元素样式</td><td>string</td></tr><tr><td>inner</td><td>内部输入框配置</td><td><a href="/src/components/doc.html#passthroughprops">PassThroughProps</a></td></tr></tbody></table><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><h3 id="基本用法" tabindex="-1">基本用法 <a class="header-anchor" href="#基本用法" aria-label="Permalink to &quot;基本用法&quot;">​</a></h3><p>最简单的文本域用法：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cl-textarea</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cl-textarea</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="带边框" tabindex="-1">带边框 <a class="header-anchor" href="#带边框" aria-label="Permalink to &quot;带边框&quot;">​</a></h3><p>添加边框样式：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cl-textarea</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cl-textarea</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="自动调整高度" tabindex="-1">自动调整高度 <a class="header-anchor" href="#自动调整高度" aria-label="Permalink to &quot;自动调整高度&quot;">​</a></h3><p>根据内容自动调整文本域高度：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cl-textarea</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> auto-height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cl-textarea</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="显示字数统计" tabindex="-1">显示字数统计 <a class="header-anchor" href="#显示字数统计" aria-label="Permalink to &quot;显示字数统计&quot;">​</a></h3><p>配置 <code>show-word-limit</code> 属性显示字数统计：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cl-textarea</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> show-word-limit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cl-textarea</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="自定义样式" tabindex="-1">自定义样式 <a class="header-anchor" href="#自定义样式" aria-label="Permalink to &quot;自定义样式&quot;">​</a></h3><p>通过 <code>pt</code> 属性自定义组件样式：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cl-textarea</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    className: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;!bg-sky-100 !border-sky-700&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    inner: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      className: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;!text-sky-700&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cl-textarea</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>`,25)]))}const u=a(e,[["render",r]]);export{c as __pageData,u as default};
